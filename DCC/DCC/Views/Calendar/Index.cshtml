@model DHTMLX.Scheduler.DHXScheduler
@{
    ViewBag.Title = "Calendar Page";
}

@Html.Partial("MenuHeader", ViewBag.UserClaim as object)

<style>
    .dhtmlx_popup_text {
        text-align: left;
    }
    .dhx_cal_light_rec.dhx_cal_light_wide {
        width: 490px !important;
    }
    .dhx_section_time select.dhx_lightbox_time_select {
        width: 125px !important;
    }
</style>

<script src="~/Scripts/scheduler_initialization.js" type="text/javascript"></script>
<div id="modals"></div>

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-10 m-auto" style="position:relative;">
            <h1 class="">Schedules</h1>
        </div>
    </div>
</div>

<div>
    <div class="mt-2 mb-2">
        <select class='form-control inputBox clickable  serviceContainer col-lg-2 d-none' name='ServiceSelection' id='ServiceSelection'></select>
        <select class="form-control col-lg-3" name="ProviderFilterSelection" id="ProviderFilterSelection" onchange="GetProviderSchedules(this);">
            @{
                foreach (var staff in ViewBag.StaffList)
                {
                    <option value="@staff.id">@staff.name</option>
                }

            }
        </select>
    </div>
    <div style='height:700px;'>
        @Html.Raw(Model.Render())
    </div>
</div>

@*
<div style="display:none">
    <div class="dhx_form_repeat" id="custom_form">
        <form>
            <div class="dhx_repeat_left">
                <label><input class="dhx_repeat_radio" type="radio" name="repeat" value="day" checked />Daily</label><br />
                <label><input class="dhx_repeat_radio" type="radio" name="repeat" value="week" />Weekly</label><br />
                <label><input class="dhx_repeat_radio" type="radio" name="repeat" value="month" />Monthly</label>
            </div>
            <div class="dhx_repeat_divider"></div>
            <div class="dhx_repeat_center">
                <div style="display:none;" id="dhx_repeat_day">
                    <label><input class="dhx_repeat_radio" type="radio" name="day_type" value="d" />Every</label><input class="dhx_repeat_text" type="text" name="day_count" value="1" />day<br />
                    <label><input class="dhx_repeat_radio" type="radio" name="day_type" checked value="w" />Every workday</label>
                </div>
                <div style="display:none;" id="dhx_repeat_week">
                    Repeat every<input class="dhx_repeat_text" type="text" name="week_count" value="1" />week next days:<br />

                    <table class="dhx_repeat_days">
                        <tr>
                            <td>
                                <label><input class="dhx_repeat_checkbox" type="checkbox" name="week_day" value="1" />Monday</label><br />
                                <label><input class="dhx_repeat_checkbox" type="checkbox" name="week_day" value="4" />Thursday</label>
                            </td>
                            <td>
                                <label><input class="dhx_repeat_checkbox" type="checkbox" name="week_day" value="2" />Tuesday</label><br />
                                <label><input class="dhx_repeat_checkbox" type="checkbox" name="week_day" value="5" />Friday</label>
                            </td>
                            <td>
                                <label><input class="dhx_repeat_checkbox" type="checkbox" name="week_day" value="3" />Wednesday</label><br />
                                <label><input class="dhx_repeat_checkbox" type="checkbox" name="week_day" value="6" />Saturday</label>
                            </td>
                            <td>
                                <label><input class="dhx_repeat_checkbox" type="checkbox" name="week_day" value="0" />Sunday</label><br /><br />
                            </td>
                        </tr>
                    </table>

                </div>
                <div id="dhx_repeat_month">
                    <label><input class="dhx_repeat_radio" type="radio" name="month_type" value="d" />Repeat</label><input class="dhx_repeat_text" type="text" name="month_day" value="1" />day every<input class="dhx_repeat_text" type="text" name="month_count" value="1" />month<br />
                    <label><input class="dhx_repeat_radio" type="radio" name="month_type" checked value="w" />On</label><input class="dhx_repeat_text" type="text" name="month_week2" value="1" /><select name="month_day2"><option value="1" selected>Monday<option value="2">Tuesday<option value="3">Wednesday<option value="4">Thursday<option value="5">Friday<option value="6">Saturday<option value="0">Sunday</select>every<input class="dhx_repeat_text" type="text" name="month_count2" value="1" />month<br />
                </div>
                <div style="display:none;" id="dhx_repeat_year">
                    <label><input class="dhx_repeat_radio" type="radio" name="year_type" value="d" />Every</label><input class="dhx_repeat_text" type="text" name="year_day" value="1" />day<select name="year_month"><option value="0" selected>January<option value="1">February<option value="2">March<option value="3">April<option value="4">May<option value="5">June<option value="6">July<option value="7">August<option value="8">September<option value="9">October<option value="10">November<option value="11">December</select>month<br />
                    <label><input class="dhx_repeat_radio" type="radio" name="year_type" checked value="w" />On</label><input class="dhx_repeat_text" type="text" name="year_week2" value="1" /><select name="year_day2"><option value="1" selected>Monday<option value="2">Tuesday<option value="3">Wednesday<option value="4">Thursday<option value="5">Friday<option value="6">Saturday<option value="7">Sunday</select>of<select name="year_month2"><option value="0" selected>January<option value="1">February<option value="2">March<option value="3">April<option value="4">May<option value="5">June<option value="6">July<option value="7">August<option value="8">September<option value="9">October<option value="10">November<option value="11">December</select><br />
                </div>
            </div>
            <div class="dhx_repeat_divider"></div>
            <div class="dhx_repeat_right">
                <label><input class="dhx_repeat_radio" type="radio" name="end" checked />No end date</label><br />
                <label><input class="dhx_repeat_radio" type="radio" name="end" />After</label><input class="dhx_repeat_text" type="text" name="occurences_count" value="1" />occurrences<br />
                <label><input class="dhx_repeat_radio" type="radio" name="end" />End by</label><input class="dhx_repeat_date" type="text" name="date_of_end" value="'+scheduler.config.repeat_date_of_end+'" /><br />
            </div>
        </form>
    </div>
</div>
*@

@section Scripts{
    <script type="text/javascript" charset="utf-8">
    var token;
    var headers;

    $(document).ready(function () {
        token = $('input[name="__RequestVerificationToken"]').val();
        headers = {};
        headers['__RequestVerificationToken'] = token;

        $(document).on("click", "#BtnEditScheduleSubmit", function () {
            waitOn();
            var valdata = $("#FormEditSchedule").serialize();

            $.ajax({
                url: "../../Calendar/UpdateSchedule",
                type: "POST",
                dataType: 'json',
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                data: valdata,
                success: function (result) {
                    waitOff();

                    var ClientID = $('#ClientFilterSelection').find(':selected').val();

                    scheduler.clearAll();
                    if (ClientID != null && ClientID > 0) {
                        scheduler.load("../Calendar/Data?id=" + ClientID);
                    } else {
                        scheduler.load("../Calendar/Data?id=0");
                    }
                    scheduler.load("../Calendar/Data");
                    $(".closeEditModal").click();

                },
                error: function (result) {
                    alert("Error while updating schedule!");
                    console.log(result);
                    waitOff();
                }
            });
        });

        //$(document).on("click", "#BtnScheduleMissed", function () {
        //    waitOn();
        //    $('#IsMissedSchedule').val(1);
        //    var valdata = $("#FormEditSchedule").serialize();
        //    //valdata.IsMissed = true;
        //    //console.log(valdata);
        //    $.ajax({
        //        url: "../../Calendar/UpdateSchedule",
        //        type: "POST",
        //        dataType: 'json',
        //        contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
        //        data: valdata,
        //        success: function (result) {
        //            waitOff();

        //            var ClientID = $('#ClientFilterSelection').find(':selected').val();

        //            scheduler.clearAll();
        //            if (ClientID != null && ClientID > 0) {
        //                scheduler.load("../Calendar/Data?id=" + ClientID);
        //            } else {
        //                scheduler.load("../Calendar/Data?id=0");
        //            }
        //            scheduler.load("../Calendar/Data");
        //            $(".closeEditModal").click();

        //        },
        //        error: function (result) {
        //            alert("Error while updating schedule!");
        //            console.log(result);
        //            waitOff();
        //        }
        //    });
        //});

        $(document).on("click", "#ScheduleAddBtn", function () {
            waitOn();
            var valdata = $("#FormAddSchedule").serialize();

            $.ajax({
                url: "../../Calendar/Schedule",
                type: "POST",
                dataType: 'json',
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                data: valdata,
                success: function (result) {
                    waitOff();

                    var ClientID = $('#ClientFilterSelection :selected').val();
                    scheduler.clearAll();
                    if (ClientID != null && ClientID > 0) {
                        scheduler.load("../Schedules/Data?id=" + ClientID);
                    } else {
                        scheduler.load("../Schedules/Data?id=0");
                    }
                    $(".closeAddModal").click();

                },
                error: function (result) {
                    alert("Error while adding schedule!");
                    console.log(result);
                    waitOff();
                }
            });
        });

    });

    function GetProviderSchedules(element) {
        var providerID = $(element).val();
        scheduler.clearAll();
        scheduler.load("../Calendar/Data?providerID=" + providerID);
    }

    /*
    scheduler.config.multi_day = true;

    scheduler.config.xml_date = "%Y-%m-%d %H:%i";
    scheduler.config.first_hour = 7;
    scheduler.config.last_hour = 19;
    scheduler.config.dblclick_create = false;
    scheduler.init('scheduler_here', new Date(), "week");
    // refers to the 'data' action that we will create in the next substep
    scheduler.load("/Calendar/data");
    // refers to the 'data' action as well
    var dp = new dataProcessor("/Calendar/data");
    dp.action_param = "dhx_editor_status";

    dp.init(scheduler);
    function show_minical() {
        if (scheduler.isCalendarVisible()) {
            scheduler.destroyCalendar();
        } else {
            scheduler.renderCalendar({
                position: "dhx_minical_icon",
                date: scheduler._date,
                navigation: true,
                handler: function (date, calendar) {
                    scheduler.setCurrentView(date);
                    scheduler.destroyCalendar()
                }
            });
        }
    }
    */

    @*if ("@Model.userLevel" != "Provider") {
        scheduler.attachEvent("onBeforeEventChanged", function (ev, e, is_new, original) {
            var ob = new Object();
            ob.ScheduleID = ev.ScheduleID;
            ob.start_date = ev.start_date;
            ob.end_date = ev.end_date;
            data = JSON.stringify(ob);
            $.ajax({
                type: 'POST',
                url: '../Calendar/ChangeScheduleDate',
                contentType: 'application/json; charset=utf-8',
                data: data,
                headers: headers,
                dataType: 'html',
                success: function (data) {
                    waitOff();
                    if (data == "error") {
                        alert("Error while updating schedule!");
                    }
                },
                error: ajaxError,
                timeout: 10000
            });

            return true;
        });

        //for double click event
        scheduler.attachEvent("onDblClick", function (id, e) {
            console.log(e);
            console.log(e.path[0]);
            console.log(e.path[0].attributes[1].value);
            $.ajax({
                type: 'GET',
                url: '../Calendar/ScheduleDetails?id=' + e.path[0].attributes[1].value,
                contentType: 'application/json; charset=utf-8',
                headers: headers,
                dataType: 'html',
                success: function (data) {
                    waitOff();
                    $('#modals').html(data);
                },
                error: ajaxError,
                timeout: 10000
            });
            return false;
        });

    } else {
        scheduler.attachEvent("onBeforeEventChanged", function (ev, e, is_new, original) {
            return false;
        });

        //for double click event
        scheduler.attachEvent("onDblClick", function (id, e) {
            return false;
        });
    }

    scheduler.attachEvent("onBeforeEventChanged", function (ev, e, is_new, original) {
        var ob = new Object();
        ob.ScheduleID = ev.ScheduleID;
        ob.start_date = ev.start_date;
        ob.end_date = ev.end_date;
        data = JSON.stringify(ob);
        $.ajax({
            type: 'POST',
            url: '../Calendar/ChangeScheduleDate',
            contentType: 'application/json; charset=utf-8',
            data: data,
            headers: headers,
            dataType: 'html',
            success: function (data) {
                waitOff();
                if (data == "error") {
                    alert("Error while updating schedule!");
                }
            },
            error: ajaxError,
            timeout: 10000
        });

        return true;
    });

    //for double click event
    scheduler.attachEvent("onDblClick", function (id, e) {
        console.log(e);
        console.log(e.path[0]);
        console.log(e.path[0].attributes[1].value);
        $.ajax({
            type: 'GET',
            url: '../Calendar/ScheduleDetails?id=' + e.path[0].attributes[1].value,
            contentType: 'application/json; charset=utf-8',
            headers: headers,
            dataType: 'html',
            success: function (data) {
                waitOff();
                $('#modals').html(data);
                $('.jsDatePicker').datepicker();
            },
            error: ajaxError,
            timeout: 10000
        });
        return false;
    });



    //for on click event
    scheduler.attachEvent("onClick", function () { return false; });

    //for on click event of empty event
    scheduler.attachEvent("onEmptyClick", function (date, e) {
        return false;
    });
    *@

    function MissedSchedule(element) {
        if ($(element).prop('checked')) {
            $('#SelecteMissingReason').parent().removeClass('d-none');
            $('#SelecteMissingResolution').parent().removeClass('d-none');
            $('#IsMissedCount').val(1);
        } else {
            $('#SelecteMissingReason').parent().addClass('d-none');
            $('#SelecteMissingResolution').parent().addClass('d-none');
            $('#IsMissedCount').val(0);
        }
    }
    </script>
}
