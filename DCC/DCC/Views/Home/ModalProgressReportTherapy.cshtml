@model DCC.Models.Home.ProgressReport
<style>
    .forAssistant {
        background-color: #ffffe0;
    }
</style>
<!--Start Modals-->
<div class="modal fade" id="actionModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-full" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5>@Model.clientName  @Model.dt  @Model.serviceName Progress Report</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><i class="fa fa-times"></i></button>
            </div>
            <div class="modal-body modal-body-full">
                <input type="hidden" id="docId" value="@Model.docId" />
                <input type="hidden" id="attachmentName" value="@Model.attachmentName" />
                <input type="hidden" id="serviceId" value="@Model.serviceId" />
                <input type="hidden" id="clientId" value="@Model.clientId" />
                <input type="hidden" id="prStartDate" value="@Model.startDate" />
                <input type="hidden" id="prEndDate" value="@Model.endDate" />
                @if (Model.rejectedReason != "")
                {
                    <div class="col-sm-12" style="color:red">
                        <b>REJECTED: </b> @Model.rejectedReason
                    </div>
                }
                <input type="hidden" id="isTherapistSupervisor" value="@(Model.isTherapistSupervisor? 1 :0)" />
                <div class="row">
                    @foreach (var q in Model.questions)
                    {
                        <div class="col-sm-12">
                            <div class="questionItem">
                                <input type="hidden" class="questionId" value="@q.questionId" />
                                <input type="hidden" class="answerRequired" value="@(q.isRequired ? 1 :0)" />
                                <input type="hidden" class="supervisorOnly" value="@(q.supervisorOnly ? 1 :0)" />
                                <div class="question" style="font-weight:bold">@q.title</div>
                                <textarea class="answer" style="width:100%" @(!Model.isTherapistSupervisor && q.supervisorOnly ? "disabled" : "")>@q.answer</textarea>
                            </div>
                        </div>
                    }
                </div>


                <div class="row" id="objectiveWrapper">
                    @foreach (var o in Model.longTermObjectives)
                    {
                        <div class="col-sm-12 objectiveItem" id="objectiveId@(o.objectiveId)">
                            <input type="hidden" class="objectiveId" value="@o.objectiveId" />
                            <div style="margin-bottom:20px; border:3px solid #c0c0c0; padding:5px">
                                <div style="margin-bottom:20px">
                                    <div class="row">
                                        <div class="col-sm-4">
                                            <div><b>Long Term Goal Area:</b></div>
                                            <select class="oGA" @(!Model.isTherapistSupervisor ? "disabled" : "")>
                                                @foreach (var gA in Model.goalAreas)
                                                {
                                                    <option value="@gA.value" @(gA.value == o.goalAreaId.ToString() ? "selected" : "")>@gA.name</option>
                                                }
                                                @if (!o.goalAreaActive)
                                                {
                                                    <option value="@o.goalAreaId" selected="selected" )>@o.goalAreaName</option>
                                                }


                                            </select>
                                        </div>
                                        <div class="col-sm-4">
                                            <b>Long Term Status:</b><br />
                                            <select class="oLTstatus" @(!Model.isTherapistSupervisor ? "disabled" : "") onchange="checkGoalDates();">
                                                @if (!Model.isTherapistSupervisor)
                                                {
                                                    <option value="@o.objectiveStatus" selected>@o.objectiveStatus</option>
                                                }
                                                else
                                                {
                                                    foreach (var st in Model.statuses)
                                                    {
                                                        <option value="@st.value" @(st.value == o.objectiveStatus ? "selected" : "")>@st.name</option>
                                                    }
                                                }
                                            </select>
                                            <br />
                                             <b>Completed Date:</b><br />
                                            <span class="oLTCompleted">@o.completedDt</span>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div><b>Long Term Vision:</b></div>
                                            <textarea class="oLTV" style="width:100%" @(!Model.isTherapistSupervisor ? "disabled" : "")>@o.longTermVision</textarea>
                                        </div>
                                        <div class="col-sm-6">
                                            <div><b>Long Term Goal:</b></div>
                                            <textarea class="oLTG" style="width:100%" @(!Model.isTherapistSupervisor ? "disabled" : "")>@o.longTermGoal</textarea>
                                        </div>
                                    </div>
                                    <!--
                            <div class="row" @(Model.isTherapistSupervisor && !Model.approval ? "style=display:none" : "")>
                        -->
                                    <div class="row" style="display:none">

                                        <div class="col-sm-12">
                                            <div><b>Do you have any changes to the long term vision?</b></div>
                                            <textarea class="oLTchanges forAssistant" style="width:100%">@o.changes</textarea>
                                        </div>
                                    </div>
                                </div>
                                <div class="shortTermGoals">
                                    @foreach (var s in o.shortTermGoals)
                                    {
                                        <div class="shortTermGoalItem" style="margin-left:20px;margin-bottom:20px;border:3px solid #c0c0c0; padding:5px;background-color:aliceblue">
                                            <input type="hidden" class="goalId" value="@s.goalId">
                                            <div class="row">
                                                <div class="col-sm-6">
                                                    <b>Action Step / Short Term Goal <span class="aStep"></span></b>
                                                    <textarea class="oAS" style="width:100%" @(!Model.isTherapistSupervisor ? "disabled" : "")>@s.shortTermGoal</textarea>
                                                </div>
                                                <div class="col-sm-6">
                                                    <b>Activities/ Strategies</b>
                                                    <textarea class="oTM" style="width:100%" @(!Model.isTherapistSupervisor ? "disabled" : "")>@s.teachingMethod</textarea>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-sm-4">
                                                    <b>Frequency</b>:<br />
                                                    <select class="oASFreq" @(!Model.isTherapistSupervisor ? "disabled" : "")>
                                                        @if (!Model.isTherapistSupervisor)
                                                        {
                                                            foreach (var freq in Model.frequencies)
                                                            {
                                                                if (freq.value == s.frequencyId)
                                                                {
                                                                    <option value="@freq.value" selected="selected">@freq.name</option>
                                                                }

                                                            }
                                                        }
                                                        else
                                                        {
                                                            foreach (var freq in Model.frequencies)
                                                            {
                                                                <option value="@freq.value" @(freq.value == s.frequencyId ? "selected" : "")>@freq.name</option>
                                                            }
                                                        }
                                                    </select>
                                                </div>
                                                <div class="col-sm-4">
                                                    <b>Status:</b><br />
                                                    <select class="oASStatus" @(!Model.isTherapistSupervisor ? "disabled" : "") onchange="checkGoalDates();">
                                                        @if (!Model.isTherapistSupervisor)
                                                        {
                                                            <option value="@s.goalStatus" selected)>@s.goalStatus</option>
                                                        }
                                                        else
                                                        {
                                                            foreach (var st in Model.statuses)
                                                            {
                                                                <option value="@st.value" @(st.value == s.goalStatus ? "selected" : "")>@st.name</option>
                                                            }
                                                        }
                                                    </select>
                                                  
                                                    <br />
                                                    <b>Completed Date:</b><br />
                                                    <span class="oASCompleted" >@s.completedDt</span>

                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-sm-6">
                                                    <div style="font-weight:bold">Progress</div>
                                                    <textarea class="objprogress" style="width:100%">@s.progress</textarea>
                                                </div>
                                                <div class="col-sm-6" @(Model.isTherapistSupervisor && !Model.approval ? "style=display:none" : "")>
                                                    <div style="font-weight:bold">Do you have any updates to the Long Term Vision, Long Term Goals, or Short Term Goals/Action steps?</div>
                                                    <textarea class="recommendation forAssistant" style="width:100%">@s.recommendation</textarea>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                                @if (Model.isTherapistSupervisor)
                                {
                                    <div>
                                        <button type="button" class="btn btn-sm btn-primary actionStepBtn" onclick="openActionStepModal(@o.objectiveId);">Add Action Step</button>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
                <div class="row" @(Model.isTherapistSupervisor && !Model.approval ? "style=display:none" : "")>
                    <div class="col-sm-12">
                        <div style="font-weight:bold">Do you have any Long Term Visions to add? </div>
                        <textarea id="goalsToAdd" class="forAssistant" style="width:100%">@Model.goalsToAdd</textarea>
                    </div>
                </div>




                @if (Model.isTherapistSupervisor)
                {
                    <div class="row">
                        <div class="col-sm-12">
                            <button type="button" class="btn btn-sm btn-primary" onclick="openLongTermVisionModal();">New Long Term Vision</button>
                        </div>
                    </div>
                }
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <input id="attachment" class="form-control form-control-sm fileName" disabled style="margin-top:6px" />
                        </div>
                        <div class="form-group">
                            <label class="btn btn-sm btn-secondary">
                                Attach File <input id="attachmentX" type="file" style="display:none" onchange="getAttachement();" />
                            </label>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        @if (Model.hasAttachment)
                        {
                            <a id="therapyReportAttachment" style="font-weight:bold;font-size:20px" href="/Home/GetAttachment?fileName=@Model.attachmentName@Model.extension"><i class="fa fa-paperclip"></i>  Attachment</a>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <table>
                            <tr>
                                <td>
                                    <input type="checkbox" class="checkBox-attest" id="attestTo" style="vertical-align:top" />
                                </td>
                                <td>
                                    <span style="font-weight:bold">@Model.signee</span> I hereby attest that the medical record entry for (@Model.completedDt) accurately reflects signatures/notations that I made in my capacity as a <span style="font-weight:bold">@Model.signeeCredentials</span>   I do hereby attest that this information is true, accurate, and complete to the best of my knowledge and that any falsifications, omissions, or concealment of material fact may subject me to administrative, civil, or criminal liability.
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                @if (Model.approval)
                {
                    <button type="button" class="btn btn-success" onclick="openApproveModalCheck();">Approve/Reject</button>
                }
                else
                {
                    <button type="button" class="btn btn-primary" onclick="submitprogressTherapyReport(true);">Complete</button>

                }
                <button type="button" class="btn btn-primary" onclick="submitprogressTherapyReport(false);">Save</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="approvalModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-warning">
                <h5>Approve/Reject @Model.serviceName Progress Report</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><i class="fa fa-times"></i></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="approveRadios" id="approve" value="1">
                            <label class="form-check-label" for="approve">Approve</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="approveRadios" id="reject" value="0">
                            <label class="form-check-label" for="reject">Reject</label>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <b>Rejection Reason:</b><br />
                        <textarea id="rejectionReason" style="width:100%"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="submitTherapyReportApproval();">Submit Approval/Rejection</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="addLongTermVisionModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background-color: orange;">
                <h5><i class="fa fa-edit"></i> Add Long Term Vision</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><i class="fa fa-times"></i></button>
            </div>
            <div class="modal-body">
                <div><b>Long Term Goal Area:</b></div>
                <select class="oGA">
                    @foreach (var gA in Model.goalAreas)
                    {
                        <option value="@gA.value">@gA.name</option>
                    }
                </select>
                <div><b>Long Term Vision:</b></div>
                <textarea class="oLTV" style="width:100%"></textarea>
                <div><b>Long Term Goal:</b></div>
                <textarea class="oLTG" style="width:100%"></textarea>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-primary" onclick="addLongTermVision();">Add Long Term Vision</button>
                <button type="button" class="btn btn-sm btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="addActionStepModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background-color: orange;">
                <h5><i class="fa fa-edit"></i> Add Action Step</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><i class="fa fa-times"></i></button>
            </div>
            <div class="modal-body">
                <input type="hidden" class="objectiveType" />
                <input type="hidden" class="objectiveId" />
                <b>Action Step/Short Term Goal <span class="aStep"></span></b>
                <textarea class="oAS" style="width:100%"></textarea>
                <b>Activities/ Strategies</b>
                <textarea class="oTM" style="width:100%"></textarea>
                <div class="row">
                    <div class="col-sm-6">
                        <b>Frequency</b>:<br />
                        <select class="oASFreq">
                            @foreach (var freq in Model.frequencies)
                            {
                                <option value="@freq.value">@freq.name</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-primary" onclick="addActionStep();">Add step</button>
                <button type="button" class="btn btn-sm btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!--End Modals-->

<!--templates-->
<div class="col-sm-12 objectiveItem template" ">
    <div style="margin-bottom:20px; border:3px solid #c0c0c0; padding:5px">
        <div style="margin-bottom:20px">
            <input type="hidden" class="objectiveId" />
            <div class="row">
                <div class="col-sm-4">
                    <div><b>Long Term Goal Area:</b></div>
                    <select class="oGA">
                        @foreach (var gA in Model.goalAreas)
                        {
                            <option value="@gA.value">@gA.name</option>
                        }
                    </select>
                </div>
                <div class="col-sm-4">
                    <b>Long Term Status:</b><br />
                    <select class="oLTstatus" onchange="checkGoalDates();">
                        @foreach (var st in Model.statuses)
                        {
                            <option value="@st.value">@st.name</option>
                        }
                    </select>
                    <br />
                    <b>Completed Date:</b><br />
                    <span class="oLTCompleted"></span>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div><b>Long Term Vision:</b></div>
                    <textarea class="oLTV" style="width:100%" />
                </div>
                <div class="col-sm-6">
                    <div><b>Long Term Goal:</b></div>
                    <textarea class="oLTG" style="width:100%" />
                </div>
            </div>
            <div class="row" style="display:none">
                <div class="col-sm-12">
                    <div><b>Do you have any changes to the long term vision?</b></div>
                    <textarea class="oLTchanges forAssistant" style="width:100%" />
                </div>
            </div>
        </div>
        <div class="shortTermGoals">
        </div>
        <div>
            <button type="button" class="btn btn-sm btn-primary actionStepBtn">Add Action Step</button>
        </div>
    </div>
</div>

<div class="shortTermGoalItem template" style="margin-left:20px;margin-bottom:20px;border:3px solid #c0c0c0; padding:5px;background-color:aliceblue">
    <input type="hidden" class="goalId">
    <div class="row">
        <div class="col-sm-6">
            <b>Action Step/Short Term Goal <span class="aStep"></span></b>
            <textarea class="oAS" style="width:100%"></textarea>
        </div>
        <div class="col-sm-6">
            <b>Activities/ Strategies</b>
            <textarea class="oTM" style="width:100%"></textarea>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-4">
            <b>Frequency</b>:<br />
            <select class="oASFreq">
               
                @foreach (var freq in Model.frequencies)
                {
                    <option value="@freq.value">@freq.name</option>
                }
            </select>
        </div>
        <div class="col-sm-4">
            <b>Status:</b><br />
            <select class="oASStatus" onchange="checkGoalDates();">
                @foreach (var st in Model.statuses)
                {
                    <option value="@st.value">@st.name</option>
                }
            </select>
            <br />
            <b>Completed Date:</b><br />
            <span class="oASCompleted"></span>
        </div>
        
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div style="font-weight:bold">Progress</div>
            <textarea class="objprogress" style="width:100%"></textarea>
        </div>
        <div class="col-sm-6" @(Model.isTherapistSupervisor && !Model.approval ? "style=display:none" : "")>
            <div style="font-weight:bold">Do you have any updates to the Long Term Vision, Long Term Goals, or Short Term Goals/Action steps?</div>
            <textarea class="recommendation forAssistant" style="width:100%"></textarea>
        </div>
    </div>
</div>
<!-- End templates-->
<script>
    var _formType = "TherapyProgressReport";
    var tgt = $('#actionModal');
    // $('#actionModal').modal('show');
    $('#actionModal').modal({
        backdrop: 'static',
        keyboard: false
    });
    function autoSave() {
        submitprogressTherapyReport(false);
    }

    function checkGoalDates() {
        debugPW(1);
        var longTermObjectives = [];
        tgt.find('.objectiveItem').each(function () {
            var objectiveId = $(this).find('.objectiveId').val();
            if (objectiveId !== '') {
                var o = {};
                o.objectiveId = objectiveId;
                o.goalAreaId = $(this).find('.oGA').val();
                o.longTermVision = $(this).find('.oLTV').val();
                o.longTermGoal = $(this).find('.oLTG').val();
                o.objectiveStatus = $(this).find('.oLTstatus').val();

                if (o.objectiveStatus === 'Completed' || o.objectiveStatus === 'Removed')
                    $(this).find('.oLTCompleted').text($('#prEndDate').val());
                else
                    $(this).find('.oLTCompleted').text('');
                o.completedDt = $(this).find('.oLTCompleted').text();
                o.changes = $(this).find('.oLTchanges').val();
                o.shortTermGoals = [];
                $(this).find('.shortTermGoalItem').each(function () {
                    var g = {};
                    g.goalId = $(this).find('.goalId').val();
                    g.shortTermGoal = $(this).find('.oAS').val();
                    g.teachingMethod = $(this).find('.oTM').val();
                    g.goalStatus = $(this).find('.oASStatus').val();
               
                    if (o.objectiveStatus === 'Completed' || o.objectiveStatus === 'Removed') {
                        $(this).find('.oASStatus').val(o.objectiveStatus);
                        $(this).find('.oASCompleted').text(o.completedDt);
                        g.goalStatus = o.objectiveStatus;
                        g.completedDt = o.completedDt;
                    }
                    if (g.goalStatus === 'Completed' || g.goalStatus === 'Removed')
                        $(this).find('.oASCompleted').text($('#prEndDate').val());
                    else
                        $(this).find('.oASCompleted').text('');
                    g.completedDt = $(this).find('.oASCompleted').val();
                    g.frequencyId = $(this).find('.oASFreq').val();
                    g.progress = $(this).find('.objprogress').val();
                    g.recommendation = $(this).find('.recommendation').val();
                    o.shortTermGoals.push(g);
                });
                longTermObjectives.push(o);
            }
        });



    }



    function submitprogressTherapyReport(complete) {
  
        if (complete && !$('#attestTo').prop('checked')) {
            Alert('Please check the checkbox at to attest to this report');
            return false;
        }
        var isOK = true;
        var questions = [];
        tgt.find('.questionItem').each(function () {
            var questionId = $(this).find('.questionId').val();
            if (questionId !== '') {
                var o = {};
                o.questionId = questionId;
                o.answer = $(this).find('.answer').val();
                questions.push(o);

                if (complete && o.answer === '' && $(this).find('.answerRequired').val() === '1') {
                    // Therapy supervisors need to answer all required question, asst therapists cannot answer questions designated supervisor only even if a answer required
                    if ($('#isTherapistSupervisor').val() === '1' || ($('#isTherapistSupervisor').val() === '0' && $(this).find('.supervisorOnly').val() === '0')) {
                        Alert('You did not answer the question ' + $(this).find('.question').text());
                        isOK = false;
                        return false;
                    }
                }
            }
        });
        if (!isOK)
            return false;
        var longTermObjectives = [];
        tgt.find('.objectiveItem').each(function () {
            var objectiveId = $(this).find('.objectiveId').val();
            if (objectiveId !== '') {
                var o = {};
                o.objectiveId = objectiveId;
                o.goalAreaId = $(this).find('.oGA').val();
                o.longTermVision = $(this).find('.oLTV').val();
                o.longTermGoal = $(this).find('.oLTG').val();
                o.objectiveStatus = $(this).find('.oLTstatus').val();

                if (o.objectiveStatus === 'Completed' || o.objectiveStatus === 'Removed')
                    $(this).find('.oLTCompleted').text($('#prEndDate').val());
                else
                    $(this).find('.oLTCompleted').text('');
                o.completedDt = $(this).find('.oLTCompleted').text();
                o.changes = $(this).find('.oLTchanges').val();
                o.shortTermGoals = [];
                $(this).find('.shortTermGoalItem').each(function () {
                    var g = {};
                    g.goalId = $(this).find('.goalId').val();
                    g.shortTermGoal = $(this).find('.oAS').val();
                    g.teachingMethod = $(this).find('.oTM').val();
                    g.goalStatus = $(this).find('.oASStatus').val();

                    if (o.objectiveStatus === 'Completed' || o.objectiveStatus === 'Removed') {
                        $(this).find('.oASStatus').val(o.objectiveStatus);
                        $(this).find('.oASCompleted').text(o.completedDt);
                        g.goalStatus = o.objectiveStatus;
                        g.completedDt = o.completedDt;
                    }
                    if (g.goalStatus === 'Completed' || g.goalStatus === 'Removed')
                        $(this).find('.oASCompleted').text($('#prEndDate').val());
                    else
                        $(this).find('.oASCompleted').text('');
                    g.completedDt = $(this).find('.oASCompleted').text();
                    g.frequencyId = $(this).find('.oASFreq').val();
                    g.progress = $(this).find('.objprogress').val();
                    g.recommendation = $(this).find('.recommendation').val();
                    o.shortTermGoals.push(g);
                });
                longTermObjectives.push(o);
            }
        });


        if (isOK){
            var Data = {
                'providerId': $('#TPRID').val(),
                'formType': _formType,
                'docId': $('#docId').val(),
                'serviceId': $('#serviceId').val(),
                'clsvId': $('#clientId').val(),
                'goalsToAdd': $('#goalsToAdd').val(),
                'attachmentName': $('#attachmentName').val(),
                'questions': questions,
                'longTermObjectives': longTermObjectives
            };
            if (complete)
                tgt.modal('hide');
          

            files = $('#attachmentX').get(0).files;
            var data = new FormData();
            data.append('files', files[0]);
            data.append('_progressReport', JSON.stringify(Data));
            data.append('complete', complete);
            waitOn();
            $.ajax({
                type: 'POST',
                url: srvcUrl + '/Home/SetTherapyProgressReport',
                headers: headers,
                contentType: false,
                processData: false,
                data: data,
                dataType: 'json',
                success: function (r) {
                    waitOff();
                    if (r.er.code !== 0)
                        Alert(r.er.msg);
                    else {
                        $('#pendingDocumentation').html(r.pendingDocumentation);
                        $('#staffAlerts').html(r.staffAlerts);
                    }
                },
                error: ajaxError,
                timeout: 100000
            });
        }


    }
    function openApproveModalCheck() {
        var tgt = $('#actionModal');
        if (!$('#attestTo').prop('checked')) {
            Alert('Please check the checkbox at to attest to this report');
            return false;
        }

        var isOK = true;
        var questions = [];
        tgt.find('.questionItem').each(function () {
            var questionId = $(this).find('.questionId').val();
            if (questionId !== '') {
                var o = {};
                o.questionId = questionId;
                o.answer = $(this).find('.answer').val();
                questions.push(o);

                if (o.answer === '' && $(this).find('.answerRequired').val() === '1') {
                    Alert('You did not answer the question ' + $(this).find('.question').text());
                    isOK = false;
                    return false;
                }
            }
        });

        if (!isOK)
            return false;
        var longTermObjectives = [];
        tgt.find('.objectiveItem').each(function () {
            var objectiveId = $(this).find('.objectiveId').val();
            if (objectiveId !== '') {
                var o = {};
                o.objectiveId = objectiveId;
                o.goalAreaId = $(this).find('.oGA').val();
                o.longTermVision = $(this).find('.oLTV').val();
                o.longTermGoal = $(this).find('.oLTG').val();
                o.objectiveStatus = $(this).find('.oLTstatus').val();

                if (o.objectiveStatus === 'Completed' || o.objectiveStatus === 'Removed')
                    $(this).find('.oLTCompleted').text($('#prEndDate').val());
                else
                    $(this).find('.oLTCompleted').text('');
                o.completedDt = $(this).find('.oLTCompleted').text();
                o.changes = $(this).find('.oLTchanges').val();
                o.shortTermGoals = [];
                $(this).find('.shortTermGoalItem').each(function () {
                    var g = {};
                    g.goalId = $(this).find('.goalId').val();
                    g.shortTermGoal = $(this).find('.oAS').val();
                    g.teachingMethod = $(this).find('.oTM').val();
                    g.goalStatus = $(this).find('.oASStatus').val();
                
                    if (o.objectiveStatus === 'Completed' || o.objectiveStatus === 'Removed') {
                        $(this).find('.oASStatus').val(o.objectiveStatus);
                        $(this).find('.oASCompleted').text(o.completedDt);
                        g.goalStatus = o.objectiveStatus;
                        g.completedDt = o.completedDt;
                    }
                    if (g.goalStatus === 'Completed' || g.goalStatus === 'Removed')
                        $(this).find('.oASCompleted').text($('#prEndDate').val());
                    else
                        $(this).find('.oASCompleted').text('');
                    g.completedDt = $(this).find('.oASCompleted').text();
                    g.frequencyId = $(this).find('.oASFreq').val();
                    g.progress = $(this).find('.objprogress').val();
                    g.recommendation = $(this).find('.recommendation').val();
                    o.shortTermGoals.push(g);
                });
                longTermObjectives.push(o);
            }
        });

        if (isOK) {
            openApproveModal();
        }
       
    }

    function submitTherapyReportApproval() {

        if (!$('#approve').prop('checked') && !$('#reject').prop('checked'))
            Alert('The progress report has not been approved or rejected');
        else if ($('#reject').prop('checked') && $('#rejectionReason').val() === '')
            Alert('If a report is rejected a reason must be given');
        else {
            var tgt = $('#actionModal');

            var isOK = true;
            var questions = [];
            tgt.find('.questionItem').each(function () {
                var questionId = $(this).find('.questionId').val();
                if (questionId !== '') {
                    var o = {};
                    o.questionId = questionId;
                    o.answer = $(this).find('.answer').val();
                    questions.push(o);

                    if (o.answer === '' && $(this).find('.answerRequired').val() === '1') {
                        Alert('You did not answer the question ' + $(this).find('.question').text());
                        isOK = false;
                        return false;
                    }
                }
            });

            if (!isOK)
                return false;
            var longTermObjectives = [];
            tgt.find('.objectiveItem').each(function () {
                var objectiveId = $(this).find('.objectiveId').val();
                if (objectiveId !== '') {
                    var o = {};
                    o.objectiveId = objectiveId;
                    o.goalAreaId = $(this).find('.oGA').val();
                    o.longTermVision = $(this).find('.oLTV').val();
                    o.longTermGoal = $(this).find('.oLTG').val();
                    o.objectiveStatus = $(this).find('.oLTstatus').val();
                    if (o.objectiveStatus === 'Completed' || o.objectiveStatus === 'Removed')
                        $(this).find('.oLTCompleted').text($('#prEndDate').val());
                    else
                        $(this).find('.oLTCompleted').text('');
                    o.completedDt = $(this).find('.oLTCompleted').text();
                    o.changes = $(this).find('.oLTchanges').val();

                    o.shortTermGoals = [];
                    $(this).find('.shortTermGoalItem').each(function () {
                        var g = {};
                        g.goalId = $(this).find('.goalId').val();
                        g.shortTermGoal = $(this).find('.oAS').val();
                        g.teachingMethod = $(this).find('.oTM').val();
                        g.goalStatus = $(this).find('.oASStatus').val();
                        if (o.objectiveStatus === 'Completed' || o.objectiveStatus === 'Removed') {
                            $(this).find('.oASStatus').val(o.objectiveStatus);
                            $(this).find('.oASCompleted').text(o.completedDt);
                            g.goalStatus = o.objectiveStatus;
                            g.completedDt = o.completedDt;
                        }
                        if (g.goalStatus === 'Completed' || g.goalStatus === 'Removed')
                            $(this).find('.oASCompleted').text($('#prEndDate').val());
                        else
                            $(this).find('.oASCompleted').text('');
                        g.completedDt = $(this).find('.oASCompleted').text();
                        g.frequencyId = $(this).find('.oASFreq').val();
                        g.progress = $(this).find('.objprogress').val();
                        g.recommendation = $(this).find('.recommendation').val();
                        o.shortTermGoals.push(g);
                    });
                    longTermObjectives.push(o);
                }
            });

            $('#approvalModal').modal('hide');
            var approvalNote = {};
            approvalNote.docId = $('#docId').val();
            approvalNote.providerId = $('#TPRID').val();
            approvalNote.rejected = $('#reject').prop('checked');
            approvalNote.rejectedReason = $('#rejectionReason').val();
            if (isOK) {
                $('#actionModal').modal('hide');
                var Data = {
                    'providerId': $('#TPRID').val(),
                    'formType': _formType,
                    'docId': $('#docId').val(),
                    'serviceId': $('#serviceId').val(),
                    'clsvId': $('#clientId').val(),
                    'goalsToAdd': $('#goalsToAdd').val(),
                    'attachmentName': $('#attachmentName').val(),
                    'questions': questions,
                    'longTermObjectives': longTermObjectives,
                    'approvalNote': approvalNote
                };

                files = $('#attachmentX').get(0).files;
                var data = new FormData();
                data.append('files', files[0]);
                data.append('_progressReport', JSON.stringify(Data));
                //      data.append('complete', complete);
                waitOn();
                $.ajax({
                    type: 'POST',
                    url: srvcUrl + '/Home/SetTherapyProgressReportApproval',
                    headers: headers,
                    contentType: false,
                    processData: false,
                    data: data,
                    dataType: 'json',
                    success: function (r) {
                        waitOff();
                        if (r.er.code !== 0)
                            Alert(r.er.msg);
                        else {
                            $('#pendingDocumentation').html(r.pendingDocumentation);
                            $('#staffAlerts').html(r.staffAlerts);
                        }
                    },
                    error: ajaxError,
                    timeout: 100000
                });
            }
        }
    }

    function openLongTermVisionModal() {
        var m = $('#addLongTermVisionModal');
        m.find('.oLTV').val('');
        m.find('.oLTG').val('');
        m.modal('show');
    }
    function addLongTermVision() {
        var m = $('#addLongTermVisionModal');
        var o = {};
        o.goalAreaId = m.find('.oGA').val();
        o.longTermVision = m.find('.oLTV').val();
        o.longTermGoal = m.find('.oLTG').val();
        longTermObjectives = [];
        longTermObjectives.push(o);
        var Data = {
            'formType': _formType,
            'docId': $('#docId').val(),
            'serviceId': $('#serviceId').val(),
            'clientId': $('#clientId').val(),
            'longTermObjectives': longTermObjectives
        };
        m.modal('hide');
        waitOn();
        $.ajax({
            type: 'POST',
            url: srvcUrl + '/Home/AddLongTermVision',
            headers: headers,
            data: JSON.stringify(Data),
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: addLongTermVisionSuccess,
            error: ajaxError,
            timeout: 10000
        });
    }
    function addLongTermVisionSuccess(r) {
        waitOff();
        if (r.er.code !== 0) {
            Alert(r.er.code);
        }
        else {
            l = r.longTermObjectives[0];
            var nDiv = $('.objectiveItem.template').clone();
            nDiv.prop('id', 'objectiveId' + l.objectiveId);
            nDiv.find('.objectiveId').val(l.objectiveId);
            nDiv.find('.oGA').val(l.goalAreaId);
            nDiv.find('.oLTV').val(l.longTermVision);
            nDiv.find('.oLTG').val(l.longTermGoal);
            nDiv.find('.oLTstatus').val(l.objectiveStatus);
            nDiv.find('.actionStepBtn').on('click', { oid: l.objectiveId }, function (event) { openActionStepModal(event.data.oid); });
            $('#objectiveWrapper').append(nDiv);
            nDiv.removeClass('template');
        }
    }

    function openActionStepModal(oId) {
        var m = $('#addActionStepModal');
        m.find('.objectiveId').val(oId);
        m.find('.oAS').val('');
        m.find('.oTM').val('');
        m.modal('show');
    }
    function addActionStep() {
        var m = $('#addActionStepModal');
        var o = {};
        o.objectiveId = m.find('.objectiveId').val();
        o.shortTermGoals = [];

        p = {};
        p.shortTermGoal = m.find('.oAS').val();
        p.teachingMethod = m.find('.oTM').val();
        p.frequencyId = m.find('.oASFreq').val();

        o.shortTermGoals.push(p);
        longTermObjectives = [];
        longTermObjectives.push(o);

        var Data = {
            'formType': _formType,
            'docId': $('#docId').val(),
            'serviceId': $('#serviceId').val(),
            'clientId': $('#clientId').val(),
            'longTermObjectives': longTermObjectives
        };
        m.modal('hide');
        waitOn();
        $.ajax({
            type: 'POST',
            url: srvcUrl + '/Home/AddActionStep',
            headers: headers,
            data: JSON.stringify(Data),
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: addActionStepSuccess,
            error: ajaxError,
            timeout: 10000
        });
    }
    function addActionStepSuccess(r) {
        waitOff();
        if (r.er.code !== 0) {
            Alert(r.er.code);
        }
        else {
            var tgt = $('#actionModal').find('#objectiveId' + r.longTermObjectives[0].objectiveId).find('.shortTermGoals');
            var nDiv = $('.shortTermGoalItem.template').clone();
            var g = r.longTermObjectives[0].shortTermGoals[0];
            nDiv.find('.goalId').val(g.goalId);
            nDiv.find('.aStep').text(g.step);
            nDiv.find('.oAS').val(g.shortTermGoal);
            nDiv.find('.oTM').val(g.teachingMethod);
            nDiv.find('.oASFreq').val(g.frequencyId);
            nDiv.find('.oASStatus').val(g.goalStatus);
            nDiv.removeClass('template');
            tgt.append(nDiv);
        }
    }
</script>
