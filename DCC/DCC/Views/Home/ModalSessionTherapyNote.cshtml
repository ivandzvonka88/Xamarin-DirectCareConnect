@model DCC.Models.SessionNotes.ClientNote


<div class="modal fade" id="actionModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document" style="overflow-y:initial">
        <div class="modal-content">
            <div class="modal-header">
                <h5>@Model.clientName  @Model.svc  @Model.dt</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><i class="fa fa-times"></i></button>
            </div>
            <div class="modal-body" style="height: 75vh;overflow-y: auto;">
                <input type="hidden" id="docId" value="@Model.docId" />
                <input type="hidden" id="attachmentName" value="@Model.attachmentName" />
                <input type="hidden" id="isoDate" value="@Model.isoDate" />
                <input type="hidden" id="noteProviderId" value="@Model.providerId" />
                <input type="hidden" id="noteClientId" value="@Model.clientId" />
                <input type="hidden" id="noteSvc" value="@Model.svc" />
                <input type="hidden" id="noteServiceId" value="@Model.serviceId" />
                <input type="hidden" id="noteClientServiceId" value="@Model.clientServiceId" />
                @if (Model.isEVV)
                {
                    if (Model.locationDetermined)
                    {
                        <div>Location: <span>@Model.location</span></div>
                        <input type="hidden" id="noteLocationId" value="@Model.clientLocationValue" />
                    }
                    else
                    {
                        <div>Default Location Needs to be set</div>
                        <select id="noteLocationId">

                            @if (Model.locations == null)
                            {
                                <option value="0|0|0|0">NOT VERIFIED</option>
                            }
                            else if (Model.locations.Count == 1)
                            {
                                foreach (var location in Model.locations)
                                {
                                    <option value="@location.value" selected="selected" )>@location.name</option>
                                }
                            }
                            else
                            {
                                <option value="0|0|0|0">NOT VERIFIED</option>
                                foreach (var location in Model.locations)
                                {
                                    <option value="@location.value" @(location.value == Model.clientLocationValue ? "selected=selected" : "" )>@location.name</option>
                                }
                            }

                        </select>

                    }

                    <table>
                        <tr>
                            <th colspan="3">Recorded In Out</th>
                        </tr>
                        <tr>
                            <th>Date</th>
                            <th>In Time</th>
                            <th>Out Time</th>
                        </tr>
                        <tr>
                            <td><span id="noteEvvDt">@Model.dt</span></td>
                            <td><span id="noteEvvIn">@Model.inTime</span></td>
                            <td><span id="noteEvvOut">@Model.outTime</span></td>
                        </tr>
                        <tr>
                        <tr>
                            <th colspan="3">Adjustable In Out</th>
                        </tr>
                        <tr>
                            <th>Date</th>
                            <th>Adj In Time</th>
                            <th>Adj Out Time</th>
                        </tr>
                        <tr>
                            <td><input type="text" id="noteAdjDt" value="@Model.adjDt" placholder="mm/dd/yyyy" readonly/></td>
                            <td><input type="text" id="noteAdjIn" value="@Model.adjInTime" onblur="adjTimeChanged()" /></td>
                            <td><input type="text" id="noteAdjOut" value="@Model.adjOutTime" onblur="adjTimeChanged()" /></td>
                        </tr>
                    </table>
                }
                else
                {
                    <div>Location: <span>@Model.location</span></div>
                    <table>
                        <tr>
                            <th colspan="3">Recorded In Out</th>
                        </tr>
                        <tr>

                            <th>Date</th>
                            <th>Manual In Time</th>
                            <th>Manual Out Time</th>
                        </tr>
                        <tr>
                            <td><span id="noteEvvDt">@Model.dt</span></td>
                            <td><span id="noteEvvIn">@Model.inTime</span></td>
                            <td><span id="noteEvvOut">@Model.outTime</span></td>
                        </tr>
                    </table>
                    <input type="hidden" id="noteLocationId" value="@Model.clientLocationValue" />
                    <input type="hidden" id="noteAdjDt" value="@Model.adjDt" />
                    <input type="hidden" id="noteAdjIn" value="@Model.adjInTime" />
                    <input type="hidden" id="noteAdjOut" value="@Model.adjOutTime" />
                }

                <div class="row">
                    <div class="col-md-12">
                        <div style="display:none">
                            <label for="noShow" class="checkBox-large"><input id="noShow" type="checkbox" @(Model.noShow ? "checked" : "") /> No Show</label>
                        </div>
                        <div><label for="teletherapy" class="checkBox-large"><input id="teletherapy" type="checkbox" @(Model.teletherapy ? "checked" : "") /> Teletherapy</label></div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-group">
                            <label for="sessionNote">Session Summary:</label>
                            <textarea id="sessionNote" class="form-control form-control-sm">@Model.note</textarea>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <span style="font-weight:bold">Therapy Provider: </span>@Model.providerName
                    </div>
                    @if (Model.rejected)
                    {
                        <div class="col-md-12">
                            <span style="font-weight:bold;color:red">Rejected: </span>@Model.rejectedReason
                        </div>
                    }

                </div>
                <div class="row">
                    @foreach (var longTermObjective in Model.longTermObjectives)
                    {
                        <div class="col-sm-12">
                            <div style="padding:5px;border:1px solid #c0c0c0">
                                <b>Long Term Vision</b>
                                <div style="text-indent:20px">
                                    @longTermObjective.longTermVision
                                </div>
                                <b>Long Term Goal</b>
                                <div style="text-indent:20px">
                                    @longTermObjective.longTermGoal
                                </div>
                                @foreach (var shortTermGoal in longTermObjective.shortTermGoals)
                                {
                                    <div style="background-color: aliceblue; padding: 5px; border: 1px solid #c0c0c0">
                                        <b>Action Step /Short Term Goal</b>
                                        <div style="text-indent:20px">
                                            @shortTermGoal.shortTermGoal
                                        </div>
                                        <!--

                            <div style="text-indent:20px">
                                @shortTermGoal.teachingMethod
                            </div>
                            -->
                                        <div class="scoringItem">
                                            <input type="hidden" class="goalId" value="@shortTermGoal.goalId" />
                                            <div class="form-inline">
                                                <div class="form-group">
                                                    <label for="score"><b>Cueing:</b></label>&nbsp;
                                                    <select class="score form-control form-control-sm" style="width:200px">
                                                        <option value=""></option>
                                                        @foreach (var scoringItem in Model.scoring)
                                                        {
                                                            <option value="@scoringItem.value" @(scoringItem.value == shortTermGoal.score ? "selected" : "")>@scoringItem.name</option>
                                                        }
                                                    </select>
                                                </div>


                                                <div class="form-group">
                                                    <b>Percentage of Success: </b>
                                                    <input class="trialPct" type="range" id="points" name="points" style="width:320px" min="0" max="100" oninput="$(@("sliderid" + @shortTermGoal.goalId)).text(this.value +'%');" value="@shortTermGoal.trialPct"><br />
                                                    <span id="@("sliderid" + @shortTermGoal.goalId)" type="text" style="width:70px">@(shortTermGoal.trialPct + "%")</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <input id="attachment" class="form-control form-control-sm fileName" disabled style="margin-top:6px" />
                        </div>
                        <div class="form-group">
                            <label class="btn btn-sm btn-secondary">
                                Attach File <input id="attachmentX" type="file" style="display:none" onchange="getAttachement();" />
                            </label>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        @if (Model.hasAttachment)
                        {
                            <a id="currentAttachment" style="font-weight:bold;font-size:20px" href="~/Home/GetAttachment?fileName=@Model.attachmentName@Model.extension"><i class="fa fa-paperclip"></i>  Attachment</a>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="disclaimer">
                                <input type="checkbox" class="checkBox-attest" id="attestTo" style="vertical-align:top" />
 
                            I <b>@Model.signee</b> hereby attest that the medical record entry for (@Model.dt) accurately reflects signatures/notations that I made in my capacity as a <b>@Model.signeeCredentials</b> I do hereby attest that this information is true, accurate, and complete to the best of my knowledge and that any falsifications, omissions, or concealment of material fact may subject me to administrative, civil, or criminal liability.
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                @if (Model.verification)
                {
                    <button id="verifyTherapytBtn" type="button" class="btn btn-success" onclick="openApproveTherapyModalCheck();">Approve/Reject Session Note</button>
                }
                else
                {
                    <button id="completeTherapytBtn" type="button" class="btn btn-primary" onclick="submitTherapyNote(true);">Submit Session Note</button>
                }
                <button id="saveTherapytBtn" type="button" class="btn btn-primary" onclick="submitTherapyNote(false);">Save Session Note</button>
                @*
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                *@

            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="approvalModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-warning">
                <h5>Approve/Reject @Model.svc Session Note</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><i class="fa fa-times"></i></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="approveRadios" id="approve" value="1">
                            <label class="form-check-label" for="approve">Approve</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="approveRadios" id="reject" value="0">
                            <label class="form-check-label" for="reject">Reject</label>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <b>Rejection Reason:</b><br />
                        <textarea id="rejectionReason" style="width:100%"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="submitTherapyNoteApproval();">Submit Approval/Rejection</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script>
    $('#actionModal').modal('show');

    function autoSave() {
        submitTherapyNote(false);
    }
    var OPEN_APPROVAL_MODAL = false;
    function openApproveTherapyModalCheck() {
        if (!$('#attestTo').prop('checked')) {
            Alert('Please check the checkbox at to attest to this report');
            return false;
        }
        else {
            OPEN_APPROVAL_MODAL = true;
            submitTherapyNote(false);
        }
    }


    function submitTherapyNote(complete) {

        if (complete) {
            var adjCheck = checkAdjustmentsToSession();
            if (adjCheck !== undefined) {
                Alert(adjCheck);
                return;
            }
        }
        if (complete && !$('#attestTo').prop('checked')) {
            Alert('Please check the checkbox at to attest to this report');
            return false;
        }

        var note = $('#sessionNote').val();
        var noShow = $('#noShow').prop('checked');
        var teletherapy = $('#teletherapy').prop('checked');
        var sessionScores = [];
        var scoreError = false;
        $('.scoringItem').each(function () {
            var goalId = $(this).find('.goalId').val();
            if (goalId !== '') {
                var o = {};
                o.goalId = goalId;
                o.score = $(this).find('.score').val();
                o.trialPct = $(this).find('.trialPct').val();
                if (o.score !== '' && o.trialPct !== '') {
                    sessionScores.push(o);
                }
                else if (o.score === '')
                    scoreError = true;
            }
        });



        if (complete &&  $('#noteLocationId').val() === '0|0|0|0')
            Alert('Please make a location request as the EVV system was unable to determine the location')
        else if (complete && scoreError)
            Alert('A Score or not applicable must be select on all action steps')
        else if (complete && noShow && note === '')
            Alert('A no show requires a note');

        else {
            var adjInfo = {};
            adjInfo.clientLocationValue = $('#noteLocationId').val();
            adjInfo.dt = $('#noteEvvDt').text();
            adjInfo.utcIn = $('#noteEvvIn').text();
            adjInfo.utcOut = $('#noteEvvOut').text();
            adjInfo.adjDt = $('#noteAdjDt').val();
            adjInfo.adjUtcIn = $('#noteAdjIn').val();
            adjInfo.adjUtcOut = $('#noteAdjOut').val();

            var Data = {
                'docId': $('#docId').val(),
                'providerId': $('#TPRID').val(),
                'complete': complete,
                'noShow': noShow,
                'teletherapy': teletherapy,
                'attachmentName': $('#attachmentName').val(),
                'note': note,
                'sessionScores': sessionScores,
                'providerId': $('#noteProviderId').val(),
                'clientId': $('#noteClientId').val(),
                'serviceId': $('#noteServiceId').val(),
                'clientServiceId': $('#noteClientServiceId').val(),
                'svc': $('#noteSvc').val(),
                'adjustmentInfo': adjInfo
            };
            files = $('#attachmentX').get(0).files;
            var data = new FormData();
            data.append('files', files[0]);
            data.append('_sessionNote', JSON.stringify(Data));
            $.ajax({
                type: 'POST',
                url: srvcUrl + '/Home/SetTherapyNote',
                headers: headers,
                contentType: false,
                processData: false,
                data: data,
                dataType: 'json',
                success: function (r) {
                    if (r.er.code !== 0)
                        Alert(r.er.msg);
                    else {
                        $('#actionModal').modal('hide');
                        $('#pendingDocumentation').html(r.pendingDocumentation);
                        $('#staffAlerts').html(r.staffAlerts);
                        if ($('#providerTimeSheet').length !== 0)
                            selectionChanged();
                        if (OPEN_APPROVAL_MODAL) {
                            OPEN_APPROVAL_MODAL = false;
                            openApproveModal();
                        }
                    }
                },
                error: ajaxError,
                timeout: 100000
            });
        }
    }

    function submitTherapyNoteApproval() {
       
        if (!$('#approve').prop('checked') && !$('#reject').prop('checked'))
            Alert('The note has not been approved or rejected');
        else if ($('#reject').prop('checked') && $('#rejectionReason').val() === '')
            Alert('If a report is rejected a reason must be given');
        else {
            $('#actionModal').modal('hide');
            $('#approvalModal').modal('hide');
            var Data = {
                'docId': $('#docId').val(),
                'providerId': $('#TPRID').val(),
                'rejected': $('#reject').prop('checked'),
                'rejectedReason': $('#rejectionReason').val()
            };
            waitOn();
            $.ajax({
                type: 'POST',
                url: srvcUrl + '/Home/SetTherapyNoteApproval',
                headers: headers,
                data: JSON.stringify(Data),
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                success: function (r) {
                    waitOff();
                    if (r.er.code !== 0)
                        Alert(r.er.msg);
                    else {
                        $('#pendingDocumentation').html(r.pendingDocumentation);
                        $('#staffAlerts').html(r.staffAlerts);
                        if ($('#providerTimeSheet').length != 0)
                            selectionChanged();
                    }
                },
                error: ajaxError,
                timeout: 10000
            });
        }
    }
</script>

